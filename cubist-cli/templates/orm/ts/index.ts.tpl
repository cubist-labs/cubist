/// Auto-generated by Cubist. Do not edit manually.
import {
  Config,
  Contract,
  ContractFactory,
  Cubist,
  Target,
} from '@cubist-alpha/cubist';

// Export contract types

{%- for t in ty_export %}
import type { {{t.name}} as Ethers{{t.name}} } from '{{t.from}}'
export type { {{t.name}} as Ethers{{t.name}} } from '{{t.from}}'
{% endfor %}

// Export contract and contract factory types

{%- for t in ty_export %}
export type {{t.name}} = Contract<Ethers{{t.name}}>;
export type {{t.name}}Factory = ContractFactory<Ethers{{t.name}}>;
{% endfor %}

// Export targets

export const Avalanche = Target.Avalanche;
export const Ethereum = Target.Ethereum;
export const Polygon = Target.Polygon;

/** Project-specific CubistORM. */
export class CubistORM extends Cubist {
  /** Create new project per target
   * @param {Config?} config - Optional config (using near otherwise).
   */
  constructor(config?: Config) {
    super(config);
  }

{%- for t in ty_export %}
  /** Get contract factory for {{t.name}}
   * @return { {{t.name}}Factory } - The contract factory.
   */
  get {{t.name}}(): {{t.name}}Factory {
    return this.getContractFactory('{{t.name}}');
  }
{% endfor %}
}
